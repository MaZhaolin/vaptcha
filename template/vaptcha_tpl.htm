{eval 
    
    function tpl_vaptcha($style_key, $script, $nodes = '', $hasContainer = true, $id = false) {
        if(!$id) $id = uniqid();
        global $_G;
        $isHttps = Helper::config('https') ? 'true' : 'false';
        $ai = Helper::config('ai') ? 'true' : 'false';
        if ($isHttps == 'false' && $_SERVER['SERVER_PROTOCOL'] == 'HTTP/2.0') $isHttps = 'true';
        $Https = $isHttps == 'true' ? 'https' : 'http';
        $style = Helper::getStyle();
        $click_style = Helper::config('style');
        $scene = Helper::getScene();
        $lang = Helper::config('lang'); 
        $vid = Helper::config('vid');        
    }
<!--{block return}-->
<style>
    #vaptcha_$id {
        padding-bottom: 10px
    }
    #vaptcha_container_$id {
        $style['css']
    }
    .vaptcha-init-main{
        display: table;
        width: 100%;
        height: 100%;
        background-color: #EEEEEE;
    }
    .vaptcha-init-loading {
        display: table-cell;
        vertical-align: middle;
        text-align: center
    }

    .vaptcha-init-loading>a {
        display: inline-block;
        width: 18px;
        height: 18px;
    }
    .vaptcha-init-loading>a img{
        vertical-align: middle
    }
    .vaptcha-init-loading .vaptcha-text {
        font-family: sans-serif;
        font-size: 12px;
        color: #CCCCCC;
        vertical-align: middle
    }
    .vaptcha-init-loading .vaptcha-text a {
        font-family: sans-serif;
        font-size: 12px;
        color: #CCCCCC;
        text-decoration: none;
    }
</style>
<div id='vaptcha_$id' style="display: none">
<!--{if $hasContainer}-->
    <label>$style['label']</label>
    <div id="vaptcha_container_$id">
        <div class="vaptcha-init-main">
            <div class="vaptcha-init-loading">
                <a><img src="https://cdn.vaptcha.com/vaptcha-loading.gif"/></a>
                <span class="vaptcha-text"><a href="https://www.vaptcha.com/" title="{lang vaptcha:loading_captcha}" target="_blank">{lang vaptcha:loading_captcha}</a>{lang vaptcha:loading_vaptcha}</span>
            </div>
        </div>
    </div>
<!--{/if}-->
<input type="hidden" name="vaptcha_token">
</div>
$nodes
<script type='text/javascript'>
(function () {
    window.console = window.console || {log: function() {return false;}}
    console.log('vaptcha version 2.2.5')
    function addEvent(el, type, cb){
        if (el.addEventListener) {
            el.addEventListener(type, cb); 
        } else if (el.attachEvent)  {
            el.attachEvent('on' + type, cb);
        }
    }
    function onload() {
        var initVaptcha = function(element, form, type, successCallback){
            var _v = new function () {
                this.isPass = false;
                this.vaptcha = null;
                this.msg = null;
                this.refresh = function () {
                    if (this.isPass) {
                        // this.vaptcha.destroy();
                        // return initVaptcha(element, form, type, successCallback);
                        this.vaptcha.reset();
                    }
                    return this;
                };
                this.notify = function () {
                    if (this.msg) {
                        this.msg.style.display = 'block';
                    } else {
                        var msg = document.createElement('span');
                        msg.className = 'rq';
                        msg.innerHTML = '&#35831;&#36827;&#34892;&#20154;&#26426;&#39564;&#35777;';
                        this.msg = msg;
                        element.parentNode.appendChild(msg);
                    }
                }
            }()
            var options = {
                vid: '$vid',
                container: element,
                type: 'click',
                // effect: "$style['type']",
                style: "$style['style']",
                https: $isHttps,
                color: "$style['color']",
                lang: '{$lang}',
                scene: '$scene',
                ai: $ai,
                outage: './plugin.php?id=vaptcha&type=downtime'
            }
            window.vaptcha(options).then(function (obj) {
                obj.listen('pass', function () {
                    _v.isPass = true;
                    _v.msg && (_v.msg.style.display = 'none');
                    var input = form.querySelectorAll('input[name="vaptcha_token"]')[0];
                    input.value = obj.getToken()
                    successCallback && successCallback();
                })
                var inputs = form.getElementsByTagName('input');
                obj.render();
                _v.vaptcha = obj;
            })   
            return _v;
        }
        var form = document.getElementById('vaptcha_$id'); 
        var vaptcha = document.getElementById('vaptcha_container_$id'); 
        $script
    }
    var script = document.getElementById('vaptcha_v_js');
    if(script && script.loaded == 'success'){ 
        onload();
    } else {
        script = document.createElement('script');
        script.src = 'https://cdn.vaptcha.com/v2.js';
        script.id = 'vaptcha_v_js';
        script.onload = script.onreadystatechange = function(){
            if(!this.readyState || this.readyState=='loaded' || this.readyState=='complete'){ 
                onload();
                script.loaded = true;
                script.onload = script.onreadystatechange = null;
            }
        };
        document.getElementsByTagName("head")[0].appendChild(script);
    }
    
})()
</script>
<!--{/block}-->
{eval return $return;}
{eval }
} 